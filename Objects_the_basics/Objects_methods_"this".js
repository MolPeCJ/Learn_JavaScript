// Объекты обычно создаются, чтоблы представлять сущности реального мира, будь то
// пользователи, заказы и так далее: 
// Объект пользователя
let user = {
    name: "Jhon",
    age: 30
};
// И так же, как и в реальном мире, пользователь может совершать действия: выбирать
// что-то из корзины покупок, авторизовываться, выходить из системы, оплачивать и т.п.
// Такие действия в JavaScript представлены свойствами-функциями объекта

// Примеры методов

// Для начала научим нашего пользователя user1 здороваться
let user1 = {
    name: "Tony",
    age: 30
};

user1.sayHi = function() {
    console.log( "Hello, world! I'm Tony" );
};

user1.sayHi(); // Hello, world! I'm Tony
// Здесь мы просто использовали Function Expression (функциональнео выражение), чтобы создать
// функцию для приветствия, и присвоили ее свойству user.sayHi наешего объекта.
// Затем мы вызвали ее, и теперь user1 может говорить!
// Функцию, которая является свойством объекта, называется методом этого объекта. 
// Итак, мы получили метод sayHi объекта user1
// Можно было сделать и немного иначе
let user2 = {
    name: "Mike",
    age: 30
};

function sayHello() {
    console.log( "Hello, world! ");
}

user2.sayHello = sayHello;

user2.sayHello(); // Hello, world!

// Объектно-оринетированное программирование
// Когда мы пишем код, используя объекты для представления сущностей реального мира, 
// - это называется объектно-оринетированное программирвоание или сокращенно: "ООП"

// Сокращенная запись метода

// Существует более короткий синтаксис для методов в литерале объекта: