'use strict';
// Формат JSON, метод toJSON

// Допустим, у нас есть сложный объект, мы хотели бы преобразовать его в строку, чтобы отправить
// по сети или просто вывести для логирования. 
// Естественно, такая строка должна включать в себя все важные свойства: 

let user = {
    name: "John",
    age: 30,
};
  
console.log( user ); // {name: "John", age: 30}

// Но в процессе разработки добавляются новые свойства, старые свойства переименовываются и удаляются. 
// Обновление такого toString каждый раз может стать проблемой. Мы могли бы попытаться перебрать свойства в нём, 
// но что, если объект сложный, и в его свойствах имеются вложенные объекты? 
// Мы должны были бы осуществить их преобразование тоже

// К счастью, нет необходимости писать код для обработки всего этого. 
// У задачи есть простое решение

// JSON.stringify
console.log( 
`\n------------------------
|    JSON.stringify    |
------------------------\n` );

// JSON (JavaScript Object Notation) – это общий формат для представления значений и объектов. 
// Его описание задокументировано в стандарте RFC 4627

// JavaScript предоставляет методы:
// * JSON.stringify - для преобразования объектов в JSON.
// * JSON.parse - для преобразования JSON обратно в объект.

// Например, здесь мы преобразуем через JSON.stringify данные студента:
let student = {
    name: 'John',
    age: 30,
    isAdmin: false,
    courses: ['html', 'css', 'js'],
    wife: null
};

let json = JSON.stringify(student);

console.log( typeof json ); // мы получили строку!

console.log( json ); // выведет объект в формате JSON

// Полученная строка json называется JSON-форматированным или сериализованным объектом. 
// Мы можем отправить его по сети или поместить в обычное хранилище данных.

// Объект в формате JSON имеет несколько важных отличий от объектного литерала:
// * Строки используют двойные кавычки. Никаких одинарных кавычек или обратных кавычек в JSON. Так 'John' становится "John".
// * Имена свойств объекта также заключаются в двойные кавычки. Это обязательно. Так age:30 становится "age":30

// Исключаем и преобразуем: replacer
console.log( 
`\n-------------------------------------------
|    Исключаем и преобразуем: replacer    |
-------------------------------------------\n` );